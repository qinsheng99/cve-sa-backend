package routers

import (
	controllers "cve-sa-backend/controllers/web"

	"github.com/gin-gonic/gin"
)

func WebRouters(r *gin.Engine) {

	website := r.Group("/cve-security-notice-server")
	{
		cve := website.Group("/cvedatabase")
		{
			cve.POST("/findAll", controllers.FindAllCVEDatabase)
			cve.GET("/getByCveIdAndPackageName", controllers.GetByCveIdAndPackageName)
			cve.GET("/getByCveId", controllers.GetByCveId)
			cve.GET("/getPackageByCveId", controllers.GetCVEProductPackageListByCveId)
			cve.GET("/getCVEProductPackageList", controllers.GetCVEProductPackageList)
			cve.GET("/getUnfixedCve", controllers.GetUnfixedCve)
			cve.GET("/hotpatch", controllers.HotPatchList)
		}
		securityNotice := website.Group("/securitynotice")
		{
			securityNotice.POST("/findAll", controllers.FindAllSecurity)
			securityNotice.POST("/getPackageLink", controllers.GetSecurityNoticePackageByPackageName)
			securityNotice.GET("/getByCveId", controllers.NoticeByCVEID)
			securityNotice.GET("/byCveIdAndAffectedComponent", controllers.ByCveIdAndAffectedComponent)
			securityNotice.GET("/getBySecurityNoticeNo", controllers.NoticeBySecurityNoticeNo)
		}

		oeDriverCompatibility := website.Group("/drivercomp")
		{
			oeDriverCompatibility.POST("/findAll", controllers.FindAllDriverCompatibility)
			oeDriverCompatibility.GET("/getOS", controllers.GetOsListForDriver)
			oeDriverCompatibility.GET("/getArchitecture", controllers.GetArchitectureListForDriver)
			oeDriverCompatibility.GET("/getType", controllers.GetDirverType)
		}

		oeHardwareCompatibility := website.Group("/hardwarecomp")
		{
			oeHardwareCompatibility.POST("/findAll", controllers.FindAllHardwareCompatibility)
			oeHardwareCompatibility.GET("/getOS", controllers.GetOsListForHardware)
			oeHardwareCompatibility.GET("/getArchitecture", controllers.GetArchitectureListForHardware)
			oeHardwareCompatibility.GET("/getOne", controllers.GetHardwareCompatibilityById)
			oeHardwareCompatibility.GET("/getAdapterList", controllers.GetOeHardwareAdapterListByHardwareId)
			oeHardwareCompatibility.GET("/getCpu", controllers.GetCpu)
		}

		osvCompatibility := website.Group("/osv")
		{
			osvCompatibility.POST("/findAll", controllers.FindAllOsv)
			osvCompatibility.GET("/getOsName", controllers.GetOsvName)
			osvCompatibility.GET("/getType", controllers.GetType)
			osvCompatibility.GET("/getOne", controllers.GetOne)
		}
	}
}
