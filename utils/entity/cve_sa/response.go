package cvesa

import (
	"cve-sa-backend/models"
)

type SecurityNoticeData struct {
	models.RCveSecurityNotice
	Cvrf                *models.RCveCvrf                     `json:"cvrf"`
	PackageHelperList   []SAPackageHelper                    `json:"packageHelperList"`
	PackageHotpatchList map[string][]HotPatchList            `json:"packageHotpatchList"`
	PackageList         []models.RCveSecurityNoticePackage   `json:"packageList"`
	ReferenceList       []models.RCveSecurityNoticeReference `json:"referenceList"`
	HotPatch            []models.CveSecurityHotPatch         `json:"-"`
	CveList             []DatabaseData                       `json:"cveList"`
}

type SAPackageHelper struct {
	ProductName string            `json:"productName"`
	PackageName string            `json:"packageName"`
	Sha256      string            `json:"sha256"`
	Child       []SAPackageHelper `json:"child"`
}

type HotPatchList struct {
	ProductName string            `json:"productName"`
	Child       []HotPatchListCve `json:"child"`
}

type HotPatchListCve struct {
	PackageName []string `json:"packageName"`
	PackageType string   `json:"packageType"`
}

type DatabaseData struct {
	models.RCveDatabase
	SecurityNoticeNo string                      `json:"securityNoticeNo"`
	ParserBean       *models.RCveParser          `json:"parserBean"`
	Cvrf             *models.RCveCvrf            `json:"cvrf"`
	PackageList      []models.RCveProductPackage `json:"packageList"`
}

type HardwareCompatibility struct {
	models.OeCompatibilityHardware
	CompatibilityConfiguration *models.OeCompatibilityHardware         `json:"compatibilityConfiguration"`
	BoardCards                 []models.OeCompatibilityHardwareAdapter `json:"boardCards"`
}

type ResultData struct {
	Total               int                                  `json:"totalCount"`
	SecurityNoticeList  []SecurityNoticeData                 `json:"securityNoticeList"`
	CveDatabaseList     []DatabaseData                       `json:"cveDatabaseList"`
	ApplicationCompList []models.ROeCompatibilityApplication `json:"applicationCompList"`
	HardwareCompList    []HardwareCompatibility              `json:"hardwareCompList"`
	DriverCompList      []models.OeCompatibilityDriver       `json:"driverCompList"`
}

type ResultOSVData struct {
	Total   int                          `json:"totalCount"`
	OsvList []models.ROeCompatibilityOsv `json:"osvList"`
}
